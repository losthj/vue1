Vue的介绍 vue2.X

vue简介
vuex是一个专门为vue.js应用程序开的状态管理模式
它采用集中式存储管理应用的所有组件的状态

vue安装工程化工具：
npm install -g @vue/cli
# OR
yarn global add @vue/cli

vue创建一个项目：
vue create my-project
# OR
vue ui

运行
npm run serve
#OR
yarn serve
#OR
npx vue-cli-service serve

vue的组成介绍
state  数据仓库
getter 用来获取数据的
mutation  用来修改数据的
action    用来提交mutation

开发环境
IDE 开发工具vs code、WS


v-html原始html
绑定属性方式 v-bind:href

计算数据：computed
侦听器：watch
使用场景介绍,watch(异步场景)，computed（数据联动）

条件渲染
常用指令 v-if  
v-else,v-else-if  
v-show 等于display:none

列表渲染
v-for 
v-for与v-if结合使用
v-for高阶用法

class与style的绑定

什么是组件化
    独立的
    可复用
    整体化的
为什么要组件化
    实现功能模块的费用
    高执行效率
    开发单页面复杂应用

如何进行拆分
    代码控制300行原则
    复用原则
    业务复杂性的原则

组件化带来的问题
    组件化状态管理（vuex）
    多组件的混合使用，多页面，复杂业务（vue-router）
    组件间的传参、消息、事件管理（props，emit/on,bus)

vuex介绍
单向数据流概念
    多个视图依赖于同一状态（例：菜单导航）
    来自不同视图的行为需要变更同一状态（例：评论弹幕）
为vue.js开发状态管理模式
组件状态集中管理
组件状态改变遵循统一的规则

如何集成Vue
集成场景
    单页面，多页面引入Vue.js
    复杂单页面应用Vue cli工具

开发工作流
    需求调研（确定需求）
    交互设计、逻辑设计、接口设计
    代码实现、测试运行、线上部署




